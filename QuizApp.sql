INSERT INTO `administrateur` (`id`, `email`, `password`) VALUES
	(1, 'badr@email.com', '123456');

INSERT INTO `question` (`id`, `question_text`, `competency_id`) VALUES
	(1, 'Quelle est la principale différence entre Spring et Spring Boot ?', 3),
	(2, 'Quelle annotation est utilisée pour définir une classe comme un contrôleur dans Spring Boot ?', 3),
	(3, 'Quel fichier est utilisé pour configurer une application Spring Boot ?', 3),
	(4, 'Quelle est la fonction principale de l\'annotation @SpringBootApplication ?', 3),
	(5, 'Quelle dépendance est nécessaire pour utiliser Spring Boot avec une base de données SQL ?', 3),
	(6, 'Quel est l’avantage principal de Spring Boot par rapport à Spring classique ?', 3),
	(7, 'Quel est le langage utilisé pour interagir avec une base de données Oracle ?', 1),
	(8, 'Quelle commande est utilisée pour créer une nouvelle table dans Oracle ?', 1),
	(9, 'Quelle clause est utilisée pour filtrer les résultats d\'une requête SELECT dans Oracle ?', 1),
	(10, 'Quelle est la fonction de la clause GROUP BY dans Oracle ?', 1),
	(11, 'Quel type de jointure renvoie tous les enregistrements lorsqu\'il y a une correspondance dans l\'une des tables ?', 1),
	(12, 'Quelle est la taille d\'un entier (int) en Java ?', 5),
	(13, 'Quelle est la portée par défaut d\'une variable de classe en Java ?', 5),
	(14, 'Quelle classe est utilisée pour lire l\'entrée utilisateur en Java ?', 5),
	(15, 'Quel mot-clé est utilisé pour empêcher l\'héritage d\'une classe en Java ?', 5),
	(16, 'Quelle est la différence principale entre une interface et une classe abstraite en Java ?', 5),
	(17, 'Quelle est l\'extension de fichier utilisée pour un script PHP ?', 1),
	(18, 'Quelle fonction est utilisée pour afficher du texte en PHP ?', 1),
	(19, 'Quelle superglobale est utilisée pour récupérer les données d\'un formulaire envoyé en méthode POST ?', 1),
	(20, 'Quelle est la manière correcte de déclarer une variable en PHP ?', 1),
	(21, 'Quelle fonction est utilisée pour se connecter à une base de données MySQL en PHP ?', 1),
	(22, 'Quel mot-clé est utilisé pour déclarer une variable en JavaScript moderne ?', 6),
	(23, 'Quelle commande permet d\'initialiser un projet Node.js ?', 6),
	(24, 'Quel objet est utilisé pour gérer les modules dans Node.js ?', 6),
	(25, 'Quelle méthode est utilisée pour lire un fichier en Node.js ?', 6),
	(26, 'Quel framework populaire est utilisé pour créer des serveurs en Node.js ?', 6),
	(27, 'Quel élément HTML est utilisé pour créer un lien hypertexte ?', 7),
	(28, 'Quelle balise est utilisée pour insérer une image en HTML ?', 7),
	(29, 'Quelle est la structure de base d\'une page HTML ?', 7),
	(30, 'Quelle balise permet d\'ajouter un titre principal à une page HTML ?', 7),
	(31, 'Quelle est la bonne manière de créer une liste ordonnée en HTML ?', 7),
	(32, 'Quel est l\'objectif principal de la méthodologie Agile ?', 8),
	(33, 'Quelle est la durée typique d\'un sprint en Scrum ?', 8),
	(34, 'Quel rôle est responsable de la gestion du backlog produit en Scrum ?', 8),
	(35, 'Quelle est la principale différence entre Agile et Waterfall ?', 8),
	(36, 'Quel cadre Agile est souvent utilisé pour la gestion de projet logiciel ?', 8),
	(37, 'Quel est le principe fondamental du modèle Waterfall ?', 9),
	(38, 'Quelle est la première phase du cycle de vie en Waterfall ?', 9),
	(39, 'Quelle est la principale faiblesse du modèle Waterfall ?', 9),
	(40, 'Dans quel type de projet le modèle Waterfall est-il le plus adapté ?', 9),
	(41, 'Pourquoi Agile est souvent préféré au modèle Waterfall ?', 9),
	(42, 'Quelle technique de gestion du temps divise le travail en intervalles courts suivis de pauses ?', 10),
	(43, 'Quel outil est souvent utilisé pour suivre le temps passé sur les tâches ?', 10),
	(44, 'Quelle est la règle des 80/20 en gestion du temps ?', 10),
	(45, 'Quelle méthode aide à organiser les tâches en fonction de leur urgence et importance ?', 10),
	(46, 'Quel est l\'objectif principal de la gestion du temps ?', 10),
	(47, 'Quelle est la première étape du processus de prise de décision ?', 11),
	(48, 'Quelle technique est utilisée pour analyser les avantages et les inconvénients d\'une décision ?', 11),
	(49, 'Qu\'est-ce qu\'une décision intuitive ?', 11),
	(50, 'Quelle méthode est souvent utilisée pour prendre des décisions stratégiques ?', 11),
	(51, 'Quel facteur influence le plus la prise de décision ?', 11);

INSERT INTO `answer_choice` (`id`, `choice_text`, `is_correct`, `question_id`) VALUES
	(1, 'A) Spring Boot est une version plus récente de Spring', b'0', 1),
	(2, 'B) Spring Boot simplifie la configuration et le développement d’applications Spring', b'1', 1),
	(3, 'C) Spring Boot remplace complètement Spring', b'0', 1),
	(4, 'D) Spring Boot ne prend pas en charge l’injection de dépendances', b'0', 1),
	(5, '@Service', b'0', 2),
	(6, '@Component', b'0', 2),
	(7, '@RestController', b'1', 2),
	(8, '@Repository', b'0', 2),
	(9, 'application.xml', b'0', 3),
	(10, 'spring-boot.properties', b'0', 3),
	(11, 'config.json', b'0', 3),
	(12, 'application.properties ou application.yml', b'1', 3),
	(13, 'Elle configure et démarre l’application Spring Boot', b'1', 4),
	(14, 'Elle permet d’activer les bases de données', b'0', 4),
	(15, 'Elle remplace @Component', b'0', 4),
	(16, 'Elle empêche le démarrage automatique des beans', b'0', 4),
	(17, 'spring-boot-starter-web', b'0', 5),
	(18, 'spring-boot-starter-data-jpa', b'1', 5),
	(19, 'spring-boot-starter-security', b'0', 5),
	(20, 'spring-boot-starter-thymeleaf', b'0', 5),
	(21, 'Il élimine complètement le besoin de configurer une base de données', b'0', 6),
	(22, 'Il permet de créer des applications avec zéro configuration', b'0', 6),
	(23, 'Il offre des configurations par défaut et réduit le code boilerplate', b'1', 6),
	(24, 'Il remplace Hibernate pour la gestion des bases de données', b'0', 6),
	(25, 'Python', b'0', 7),
	(26, 'SQL', b'1', 7),
	(27, 'HTML', b'0', 7),
	(28, 'C++', b'0', 7),
	(29, 'INSERT TABLE', b'0', 8),
	(30, 'CREATE TABLE', b'1', 8),
	(31, 'NEW TABLE', b'0', 8),
	(32, 'ADD TABLE', b'0', 8),
	(33, 'HAVING', b'0', 9),
	(34, 'WHERE', b'1', 9),
	(35, 'ORDER BY', b'0', 9),
	(36, 'GROUP BY', b'0', 9),
	(37, 'Elle regroupe les lignes ayant des valeurs identiques dans une colonne spécifiée', b'1', 10),
	(38, 'Elle trie les résultats par ordre croissant', b'0', 10),
	(39, 'Elle limite le nombre de résultats retournés', b'0', 10),
	(40, 'Elle met à jour les données dans une table', b'0', 10),
	(41, 'INNER JOIN', b'0', 11),
	(42, 'LEFT JOIN', b'0', 11),
	(43, 'FULL OUTER JOIN', b'1', 11),
	(44, 'CROSS JOIN', b'0', 11),
	(45, '2 octets', b'0', 12),
	(46, '4 octets', b'1', 12),
	(47, '8 octets', b'0', 12),
	(48, 'Dépend du système d\'exploitation', b'0', 12),
	(49, 'public', b'0', 13),
	(50, 'private', b'0', 13),
	(51, 'protected', b'0', 13),
	(52, 'package-private', b'1', 13),
	(53, 'InputReader', b'0', 14),
	(54, 'BufferedReader', b'0', 14),
	(55, 'Scanner', b'1', 14),
	(56, 'Console', b'0', 14),
	(57, 'static', b'0', 15),
	(58, 'final', b'1', 15),
	(59, 'const', b'0', 15),
	(60, 'private', b'0', 15),
	(61, 'Une interface peut contenir des méthodes implémentées, une classe abstraite ne peut pas', b'0', 16),
	(62, 'Une classe abstraite peut avoir des méthodes implémentées, une interface ne peut contenir que des méthodes abstraites (avant Java 8)', b'1', 16),
	(63, 'Une interface est plus rapide qu\'une classe abstraite', b'0', 16),
	(64, 'Il n\'y a aucune différence', b'0', 16),
	(65, '.html', b'0', 17),
	(66, '.php', b'1', 17),
	(67, '.js', b'0', 17),
	(68, '.css', b'0', 17),
	(69, 'echo', b'1', 18),
	(70, 'printText', b'0', 18),
	(71, 'display', b'0', 18),
	(72, 'console.log', b'0', 18),
	(73, '$_GET', b'0', 19),
	(74, '$_POST', b'1', 19),
	(75, '$_REQUEST', b'0', 19),
	(76, '$_SESSION', b'0', 19),
	(77, 'variable name = "valeur";', b'0', 20),
	(78, '$nom_variable = "valeur";', b'1', 20),
	(79, 'let nom_variable = "valeur";', b'0', 20),
	(80, 'var nom_variable = "valeur";', b'0', 20),
	(81, 'connect()', b'0', 21),
	(82, 'mysqli_connect()', b'1', 21),
	(83, 'db_connect()', b'0', 21),
	(84, 'open_database()', b'0', 21),
	(85, 'var', b'0', 22),
	(86, 'let', b'1', 22),
	(87, 'const', b'0', 22),
	(88, 'static', b'0', 22),
	(89, 'node init', b'0', 23),
	(90, 'npm init', b'1', 23),
	(91, 'npm start', b'0', 23),
	(92, 'node start', b'0', 23),
	(93, 'modules', b'0', 24),
	(94, 'require', b'1', 24),
	(95, 'import', b'0', 24),
	(96, 'loader', b'0', 24),
	(97, 'fs.readFile()', b'1', 25),
	(98, 'fileSystem.read()', b'0', 25),
	(99, 'read.file()', b'0', 25),
	(100, 'fs.getFile()', b'0', 25),
	(101, 'Django', b'0', 26),
	(102, 'Express', b'1', 26),
	(103, 'Laravel', b'0', 26),
	(104, 'Spring Boot', b'0', 26),
	(105, '<a>', b'1', 27),
	(106, '<link>', b'0', 27),
	(107, '<href>', b'0', 27),
	(108, '<hyperlink>', b'0', 27),
	(109, '<img>', b'1', 28),
	(110, '<picture>', b'0', 28),
	(111, '<src>', b'0', 28),
	(112, '<image>', b'0', 28),
	(113, '<html> <head> <body>', b'1', 29),
	(114, '<header> <main> <footer>', b'0', 29),
	(115, '<div> <section> <article>', b'0', 29),
	(116, '<head> <section> <footer>', b'0', 29),
	(117, '<h1>', b'1', 30),
	(118, '<title>', b'0', 30),
	(119, '<heading>', b'0', 30),
	(120, '<h6>', b'0', 30),
	(121, '<ol>', b'1', 31),
	(122, '<ul>', b'0', 31),
	(123, '<list>', b'0', 31),
	(124, '<li>', b'0', 31),
	(125, 'Livrer rapidement des produits fonctionnels', b'1', 32),
	(126, 'Rédiger une documentation complète avant de commencer', b'0', 32),
	(127, 'Suivre un processus strict sans adaptation', b'0', 32),
	(128, 'Éliminer les réunions', b'0', 32),
	(129, '1 à 4 semaines', b'1', 33),
	(130, '6 mois', b'0', 33),
	(131, '1 jour', b'0', 33),
	(132, '12 semaines', b'0', 33),
	(133, 'Product Owner', b'1', 34),
	(134, 'Scrum Master', b'0', 34),
	(135, 'Développeur', b'0', 34),
	(136, 'Manager', b'0', 34),
	(137, 'Agile est flexible, Waterfall suit un plan fixe', b'1', 35),
	(138, 'Waterfall est plus rapide', b'0', 35),
	(139, 'Agile ne nécessite pas de test', b'0', 35),
	(140, 'Waterfall est plus collaboratif', b'0', 35),
	(141, 'Scrum', b'1', 36),
	(142, 'Lean', b'0', 36),
	(143, 'DevOps', b'0', 36),
	(144, 'Six Sigma', b'0', 36),
	(145, 'Un processus séquentiel en phases distinctes', b'1', 37),
	(146, 'Un cycle de développement itératif', b'0', 37),
	(147, 'Un modèle basé sur l\'essai-erreur', b'0', 37),
	(148, 'Un cadre Agile', b'0', 37),
	(149, 'Analyse des besoins', b'1', 38),
	(150, 'Développement', b'0', 38),
	(151, 'Test', b'0', 38),
	(152, 'Déploiement', b'0', 38),
	(153, 'Rigidité face aux changements', b'1', 39),
	(154, 'Manque de documentation', b'0', 39),
	(155, 'Trop de flexibilité', b'0', 39),
	(156, 'Aucune planification', b'0', 39),
	(157, 'Les projets bien définis avec peu de changements', b'1', 40),
	(158, 'Les projets nécessitant beaucoup d\'adaptations', b'0', 40),
	(159, 'Les startups innovantes', b'0', 40),
	(160, 'Les projets où les délais sont secondaires', b'0', 40),
	(161, 'Il permet une meilleure adaptation aux changements', b'1', 41),
	(162, 'Il est plus rapide pour les projets complexes', b'0', 41),
	(163, 'Il évite toute documentation', b'0', 41),
	(164, 'Il ne nécessite pas de réunions', b'0', 41),
	(165, 'Technique Pomodoro', b'1', 42),
	(166, 'Méthode Agile', b'0', 42),
	(167, 'Méthode Waterfall', b'0', 42),
	(168, 'Scrum', b'0', 42),
	(169, 'Un chronomètre', b'1', 43),
	(170, 'Un calendrier papier', b'0', 43),
	(171, 'Un dictionnaire', b'0', 43),
	(172, 'Un livre de gestion', b'0', 43),
	(173, '80% des résultats proviennent de 20% des efforts', b'1', 44),
	(174, '20% des tâches sont inutiles', b'0', 44),
	(175, '80% du temps est gaspillé', b'0', 44),
	(176, '20% du travail est toujours en retard', b'0', 44),
	(177, 'Matrice d\'Eisenhower', b'1', 45),
	(178, 'Diagramme de Gantt', b'0', 45),
	(179, 'Sprint Backlog', b'0', 45),
	(180, 'Mind Mapping', b'0', 45),
	(181, 'Optimiser l\'utilisation du temps', b'1', 46),
	(182, 'Travailler plus longtemps', b'0', 46),
	(183, 'Faire plusieurs tâches à la fois', b'0', 46),
	(184, 'Éviter les pauses', b'0', 46),
	(185, 'Identifier le problème', b'1', 47),
	(186, 'Prendre une décision immédiatement', b'0', 47),
	(187, 'Analyser les solutions', b'0', 47),
	(188, 'Implémenter une solution', b'0', 47),
	(189, 'Analyse SWOT', b'1', 48),
	(190, 'Techniques Agile', b'0', 48),
	(191, 'Scrum', b'0', 48),
	(192, 'Pomodoro', b'0', 48),
	(193, 'Une décision basée sur l\'instinct', b'1', 49),
	(194, 'Une décision toujours rationnelle', b'0', 49),
	(195, 'Une décision basée uniquement sur des chiffres', b'0', 49),
	(196, 'Une décision prise après plusieurs mois', b'0', 49),
	(197, 'Processus décisionnel analytique', b'1', 50),
	(198, 'Méthode Scrum', b'0', 50),
	(199, 'Planification Agile', b'0', 50),
	(200, 'Méthode Waterfall', b'0', 50),
	(201, 'Les informations disponibles', b'1', 51),
	(202, 'Le hasard', b'0', 51),
	(203, 'La météo', b'0', 51),
	(204, 'L\'intuition seule', b'0', 51);


INSERT INTO `theme` (`id`, `name`) VALUES
	(1, 'IT'),
	(2, 'Management');

INSERT INTO `level` (`id`, `name`, `theme_id`) VALUES
	(1, 'Junior', 1),
	(2, 'Senior', 1),
	(3, 'Manager', 2),
	(4, 'Assistant Manager', 2);

INSERT INTO `role` (`id`, `name`, `theme_id`) VALUES
	(1, 'BackEnd Developer', 1),
	(2, 'FrontEnd Developer', 1),
	(3, 'UI/UX Designer', 1),
	(4, 'Project Manager', 2),
	(5, 'Product Manager', 2);

INSERT INTO `competence` (`id`, `level_id`, `name`, `role_id`) VALUES
	(1, 2, 'Oracle Database', 1),
	(2, 2, 'React', 2),
	(3, 2, 'Spring Boot', 1),
	(4, 1, 'PHP', 1),
	(5, 1, 'Java', 1),
	(6, 1, 'JavaScript (Node.js)', 1),
	(7, 1, 'HTML', 1),
	(8, 3, 'Agile', 4),
	(9, 3, 'Waterfall', 4),
	(10, 3, 'Time Management', 4),
	(11, 3, 'Decision-Making', 4);

